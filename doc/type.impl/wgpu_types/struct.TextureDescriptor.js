(function() {
    var type_impls = Object.fromEntries([["wgpu",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-Clone-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","wgpu::api::texture::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-Debug-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wgpu::api::texture::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6327\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, L, V&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    V: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6327\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","wgpu::api::texture::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-Hash-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","wgpu::api::texture::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-PartialEq-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","wgpu::api::texture::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6327\">Source</a><a href=\"#impl-Serialize-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,\n    V: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6327\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","wgpu::api::texture::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6353\">Source</a><a href=\"#impl-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_label\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6356-6358\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.map_label\" class=\"fn\">map_label</a>&lt;K&gt;(&amp;self, fun: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;L</a>) -&gt; K) -&gt; <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;K, V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Takes a closure and maps the label of the texture descriptor into another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_label_and_view_formats\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6374-6380\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.map_label_and_view_formats\" class=\"fn\">map_label_and_view_formats</a>&lt;K, M&gt;(\n    &amp;self,\n    l_fun: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;L</a>) -&gt; K,\n    v_fun: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(V) -&gt; M,\n) -&gt; <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;K, M&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Maps the label and view formats of the texture descriptor into another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mip_level_size\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6425\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.mip_level_size\" class=\"fn\">mip_level_size</a>(&amp;self, level: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"wgpu/struct.Extent3d.html\" title=\"struct wgpu::Extent3d\">Extent3d</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the extent at a given mip level.</p>\n<p>If the given mip level is larger than possible, returns None.</p>\n<p>Treats the depth as part of the mipmaps. If calculating\nfor a 2DArray texture, which does not mipmap depth, set depth to 1.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>desc  = TextureDescriptor {\n  label: (),\n  size: wgpu::Extent3d { width: <span class=\"number\">100</span>, height: <span class=\"number\">60</span>, depth_or_array_layers: <span class=\"number\">1 </span>},\n  mip_level_count: <span class=\"number\">7</span>,\n  sample_count: <span class=\"number\">1</span>,\n  dimension: wgpu::TextureDimension::D3,\n  format: wgpu::TextureFormat::Rgba8Sint,\n  usage: wgpu::TextureUsages::empty(),\n  view_formats: <span class=\"kw-2\">&amp;</span>[],\n};\n\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">100</span>, height: <span class=\"number\">60</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">50</span>, height: <span class=\"number\">30</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">25</span>, height: <span class=\"number\">15</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">3</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">12</span>, height: <span class=\"number\">7</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">6</span>, height: <span class=\"number\">3</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">3</span>, height: <span class=\"number\">1</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">6</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">1</span>, height: <span class=\"number\">1</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">7</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_render_extent\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6437\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.compute_render_extent\" class=\"fn\">compute_render_extent</a>(\n    &amp;self,\n    mip_level: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>,\n    plane: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"wgpu/struct.Extent3d.html\" title=\"struct wgpu::Extent3d\">Extent3d</a></h4></section></summary><div class=\"docblock\"><p>Computes the render extent of this texture.</p>\n<p><a href=\"https://gpuweb.github.io/gpuweb/#abstract-opdef-compute-render-extent\">https://gpuweb.github.io/gpuweb/#abstract-opdef-compute-render-extent</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.array_layer_count\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6461\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.array_layer_count\" class=\"fn\">array_layer_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of array layers.</p>\n<p><a href=\"https://gpuweb.github.io/gpuweb/#abstract-opdef-array-layer-count\">https://gpuweb.github.io/gpuweb/#abstract-opdef-array-layer-count</a></p>\n</div></details></div></details>",0,"wgpu::api::texture::TextureDescriptor"],["<section id=\"impl-Eq-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-Eq-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","wgpu::api::texture::TextureDescriptor"],["<section id=\"impl-StructuralPartialEq-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-StructuralPartialEq-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;</h3></section>","StructuralPartialEq","wgpu::api::texture::TextureDescriptor"]]],["wgpu_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-Clone-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","wgpu_core::resource::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-Debug-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wgpu_core::resource::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6327\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, L, V&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    V: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6327\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","wgpu_core::resource::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-Hash-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","wgpu_core::resource::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-PartialEq-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","wgpu_core::resource::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6327\">Source</a><a href=\"#impl-Serialize-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,\n    V: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6327\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","wgpu_core::resource::TextureDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6353\">Source</a><a href=\"#impl-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_label\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6356-6358\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.map_label\" class=\"fn\">map_label</a>&lt;K&gt;(&amp;self, fun: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;L</a>) -&gt; K) -&gt; <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;K, V&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Takes a closure and maps the label of the texture descriptor into another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_label_and_view_formats\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6374-6380\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.map_label_and_view_formats\" class=\"fn\">map_label_and_view_formats</a>&lt;K, M&gt;(\n    &amp;self,\n    l_fun: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;L</a>) -&gt; K,\n    v_fun: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(V) -&gt; M,\n) -&gt; <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;K, M&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Maps the label and view formats of the texture descriptor into another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mip_level_size\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6425\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.mip_level_size\" class=\"fn\">mip_level_size</a>(&amp;self, level: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"wgpu_types/struct.Extent3d.html\" title=\"struct wgpu_types::Extent3d\">Extent3d</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the extent at a given mip level.</p>\n<p>If the given mip level is larger than possible, returns None.</p>\n<p>Treats the depth as part of the mipmaps. If calculating\nfor a 2DArray texture, which does not mipmap depth, set depth to 1.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>desc  = TextureDescriptor {\n  label: (),\n  size: wgpu::Extent3d { width: <span class=\"number\">100</span>, height: <span class=\"number\">60</span>, depth_or_array_layers: <span class=\"number\">1 </span>},\n  mip_level_count: <span class=\"number\">7</span>,\n  sample_count: <span class=\"number\">1</span>,\n  dimension: wgpu::TextureDimension::D3,\n  format: wgpu::TextureFormat::Rgba8Sint,\n  usage: wgpu::TextureUsages::empty(),\n  view_formats: <span class=\"kw-2\">&amp;</span>[],\n};\n\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">100</span>, height: <span class=\"number\">60</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">50</span>, height: <span class=\"number\">30</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">25</span>, height: <span class=\"number\">15</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">3</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">12</span>, height: <span class=\"number\">7</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">6</span>, height: <span class=\"number\">3</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">3</span>, height: <span class=\"number\">1</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">6</span>), <span class=\"prelude-val\">Some</span>(wgpu::Extent3d { width: <span class=\"number\">1</span>, height: <span class=\"number\">1</span>, depth_or_array_layers: <span class=\"number\">1 </span>}));\n<span class=\"macro\">assert_eq!</span>(desc.mip_level_size(<span class=\"number\">7</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_render_extent\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6437\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.compute_render_extent\" class=\"fn\">compute_render_extent</a>(\n    &amp;self,\n    mip_level: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>,\n    plane: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"wgpu_types/struct.Extent3d.html\" title=\"struct wgpu_types::Extent3d\">Extent3d</a></h4></section></summary><div class=\"docblock\"><p>Computes the render extent of this texture.</p>\n<p><a href=\"https://gpuweb.github.io/gpuweb/#abstract-opdef-compute-render-extent\">https://gpuweb.github.io/gpuweb/#abstract-opdef-compute-render-extent</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.array_layer_count\" class=\"method\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6461\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wgpu_types/struct.TextureDescriptor.html#tymethod.array_layer_count\" class=\"fn\">array_layer_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of array layers.</p>\n<p><a href=\"https://gpuweb.github.io/gpuweb/#abstract-opdef-array-layer-count\">https://gpuweb.github.io/gpuweb/#abstract-opdef-array-layer-count</a></p>\n</div></details></div></details>",0,"wgpu_core::resource::TextureDescriptor"],["<section id=\"impl-Eq-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-Eq-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","wgpu_core::resource::TextureDescriptor"],["<section id=\"impl-StructuralPartialEq-for-TextureDescriptor%3CL,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wgpu_types/lib.rs.html#6326\">Source</a><a href=\"#impl-StructuralPartialEq-for-TextureDescriptor%3CL,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"wgpu_types/struct.TextureDescriptor.html\" title=\"struct wgpu_types::TextureDescriptor\">TextureDescriptor</a>&lt;L, V&gt;</h3></section>","StructuralPartialEq","wgpu_core::resource::TextureDescriptor"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[27006,27045]}